#!/bin/bash
# Improved but simple per-file JS extractor (beginner-friendly)

mkdir -p js_simple && cd js_simple || exit 1

# assume your .js files are already here; if not, download them first
# for safety: skip if no .js files
shopt -s nullglob
for f in ./*.js; do
  [ -f "$f" ] || continue
  fname=$(basename "$f")
  report="${fname}.findings.txt"
  echo "=== Checking $fname ==="
  echo "File: $f" > "$report"

  # 1) Full URLs (unique) - show top 20
  echo -e "\n>>> URLs (top 20) <<<" | tee -a "$report"
  grep -Eo 'https?://[^"'"'[:space:]]+' "$f" | sort -u | tee -a "$report" | sed -n '1,20p'

  # 2) API-like paths (relative) - clean & unique
  echo -e "\n>>> API / endpoint paths <<<" | tee -a "$report"
  grep -oP '(?:/api|/v[0-9]+|/graphql|/payment|/auth|/merchant)[^\"'\''\)\]\s;}]+' "$f" \
    | sed 's/[\"'\''\)\]\s;}]$//' | sort -u | tee -a "$report" | sed -n '1,20p'

  # 3) Param NAMES from inline querystrings (unique)
  echo -e "\n>>> Param names (from inline querystrings) <<<" | tee -a "$report"
  grep -Eo '\?[^\s"'"'">]*' "$f" | tr '&' '\n' | sed 's/^[?&]//' | cut -d'=' -f1 | sort -u | tee -a "$report" | sed -n '1,40p'

  # 4) Suspicious keywords/lines
  echo -e "\n>>> Suspicious keywords (first matches) <<<" | tee -a "$report"
  grep -nEi 'token|jwt|apikey|api_key|secret|password|localStorage|sessionStorage|document.cookie|atob\(|btoa\(|jsencrypt|encrypt|decrypt|AES|RSA' "$f" \
    | sed -n '1,40p' | tee -a "$report" || true

  # 5) summary counts
  urls_count=$(grep -Eo 'https?://[^"'"'[:space:]]+' "$f" | sort -u | wc -l)
  paths_count=$(grep -oP '(?:/api|/v[0-9]+|/graphql|/payment|/auth|/merchant)[^\"'\''\)\]\s;}]+' "$f" | sort -u | wc -l)
  params_count=$(grep -Eo '\?[^\s"'"'">]*' "$f" | tr '&' '\n' | sed 's/^[?&]//' | cut -d'=' -f1 | sort -u | wc -l)

  echo -e "\n=== SUMMARY ===" | tee -a "$report"
  echo "unique_urls: $urls_count" | tee -a "$report"
  echo "unique_api_paths: $paths_count" | tee -a "$report"
  echo "unique_param_names: $params_count" | tee -a "$report"

  echo "Wrote report: $report"
  echo "---------------------------"
done
